/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */
define(["exports","../_virtual/_rollupPluginBabelHelpers","../math/Vector3","../core/Object3D","../objects/LineSegments","../materials/LineBasicMaterial","../core/BufferAttribute","../core/BufferGeometry"],(function(t,e,i,o,r,a,s,n){"use strict";var l=new i.Vector3,c=function(t){function i(e,i){var o;(o=t.call(this)||this).light=e,o.light.updateMatrixWorld(),o.matrix=e.matrixWorld,o.matrixAutoUpdate=!1,o.color=i;for(var l=new n.BufferGeometry,c=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1],h=0,u=1;h<32;h++,u++){var d=h/32*Math.PI*2,p=u/32*Math.PI*2;c.push(Math.cos(d),Math.sin(d),1,Math.cos(p),Math.sin(p),1)}l.setAttribute("position",new s.Float32BufferAttribute(c,3));var f=new a.LineBasicMaterial({fog:!1,toneMapped:!1});return o.cone=new r.LineSegments(l,f),o.add(o.cone),o.update(),o}e.inheritsLoose(i,t);var o=i.prototype;return o.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()},o.update=function(){this.light.updateMatrixWorld();var t=this.light.distance?this.light.distance:1e3,e=t*Math.tan(this.light.angle);this.cone.scale.set(e,e,t),l.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(l),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)},i}(o.Object3D);t.SpotLightHelper=c,Object.defineProperty(t,"__esModule",{value:!0})}));
