/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */
define(["exports","../_virtual/_rollupPluginBabelHelpers","../core/BufferGeometry","../core/BufferAttribute","../extras/curves/Curves","../math/Vector2","../math/Vector3","../extras/curves/QuadraticBezierCurve3"],(function(e,t,r,o,a,n,u,i){"use strict";var s=function(e){function r(t,r,a,s,f){var c;void 0===t&&(t=new i.QuadraticBezierCurve3(new u.Vector3(-1,-1,0),new u.Vector3(-1,1,0),new u.Vector3(1,1,0))),void 0===r&&(r=64),void 0===a&&(a=1),void 0===s&&(s=8),void 0===f&&(f=!1),(c=e.call(this)||this).type="TubeGeometry",c.parameters={path:t,tubularSegments:r,radius:a,radialSegments:s,closed:f};var l=t.computeFrenetFrames(r,f);c.tangents=l.tangents,c.normals=l.normals,c.binormals=l.binormals;var v=new u.Vector3,m=new u.Vector3,p=new n.Vector2,h=new u.Vector3,y=[],b=[],d=[],x=[];function w(e){h=t.getPointAt(e/r,h);for(var o=l.normals[e],n=l.binormals[e],u=0;u<=s;u++){var i=u/s*Math.PI*2,f=Math.sin(i),c=-Math.cos(i);m.x=c*o.x+f*n.x,m.y=c*o.y+f*n.y,m.z=c*o.z+f*n.z,m.normalize(),b.push(m.x,m.y,m.z),v.x=h.x+a*m.x,v.y=h.y+a*m.y,v.z=h.z+a*m.z,y.push(v.x,v.y,v.z)}}return function(){for(var e=0;e<r;e++)w(e);w(!1===f?r:0),function(){for(var e=0;e<=r;e++)for(var t=0;t<=s;t++)p.x=e/r,p.y=t/s,d.push(p.x,p.y)}(),function(){for(var e=1;e<=r;e++)for(var t=1;t<=s;t++){var o=(s+1)*(e-1)+(t-1),a=(s+1)*e+(t-1),n=(s+1)*e+t,u=(s+1)*(e-1)+t;x.push(o,a,u),x.push(a,n,u)}}()}(),c.setIndex(x),c.setAttribute("position",new o.Float32BufferAttribute(y,3)),c.setAttribute("normal",new o.Float32BufferAttribute(b,3)),c.setAttribute("uv",new o.Float32BufferAttribute(d,2)),c}return t.inheritsLoose(r,e),r.prototype.toJSON=function(){var t=e.prototype.toJSON.call(this);return t.path=this.parameters.path.toJSON(),t},r.fromJSON=function(e){return new r((new a[e.path.type]).fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)},r}(r.BufferGeometry);e.TubeBufferGeometry=s,e.TubeGeometry=s,Object.defineProperty(e,"__esModule",{value:!0})}));
