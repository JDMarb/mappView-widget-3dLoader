/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */
define(["exports","../_virtual/_rollupPluginBabelHelpers","../core/BufferGeometry","../core/BufferAttribute","../math/Vector3"],(function(e,t,r,o,u){"use strict";var i=function(e){function r(t){var r;if(void 0===t&&(t=null),(r=e.call(this)||this).type="WireframeGeometry",r.parameters={geometry:t},null!==t){var i=[],n=new Set,a=new u.Vector3,s=new u.Vector3;if(null!==t.index){var l=t.attributes.position,c=t.index,v=t.groups;0===v.length&&(v=[{start:0,count:c.count,materialIndex:0}]);for(var y=0,m=v.length;y<m;++y)for(var p=v[y],h=p.start,x=h,b=h+p.count;x<b;x+=3)for(var d=0;d<3;d++){var B=c.getX(x+d),z=c.getX(x+(d+1)%3);a.fromBufferAttribute(l,B),s.fromBufferAttribute(l,z),!0===f(a,s,n)&&(i.push(a.x,a.y,a.z),i.push(s.x,s.y,s.z))}}else for(var g=t.attributes.position,A=0,w=g.count/3;A<w;A++)for(var G=0;G<3;G++){var _=3*A+G,V=3*A+(G+1)%3;a.fromBufferAttribute(g,_),s.fromBufferAttribute(g,V),!0===f(a,s,n)&&(i.push(a.x,a.y,a.z),i.push(s.x,s.y,s.z))}r.setAttribute("position",new o.Float32BufferAttribute(i,3))}return r}return t.inheritsLoose(r,e),r}(r.BufferGeometry);function f(e,t,r){var o=e.x+","+e.y+","+e.z+"-"+t.x+","+t.y+","+t.z,u=t.x+","+t.y+","+t.z+"-"+e.x+","+e.y+","+e.z;return!0!==r.has(o)&&!0!==r.has(u)&&(r.add(o),r.add(u),!0)}e.WireframeGeometry=i,Object.defineProperty(e,"__esModule",{value:!0})}));
