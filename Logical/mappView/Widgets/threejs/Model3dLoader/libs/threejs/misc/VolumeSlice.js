/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */
define(["exports","../constants","../objects/Mesh","../materials/MeshBasicMaterial","../textures/Texture","../geometries/PlaneGeometry"],(function(e,t,i,s,a,h){"use strict";var r=function(){function e(e,h,r){var n=this;this.volume=e,h=h||0,Object.defineProperty(this,"index",{get:function(){return h},set:function(e){return h=e,n.geometryNeedsUpdate=!0,h}}),this.axis=r||"z",this.canvas=document.createElement("canvas"),this.canvasBuffer=document.createElement("canvas"),this.updateGeometry();var o=new a.Texture(this.canvas);o.minFilter=t.LinearFilter,o.wrapS=o.wrapT=t.ClampToEdgeWrapping;var c=new s.MeshBasicMaterial({map:o,side:t.DoubleSide,transparent:!0});this.mesh=new i.Mesh(this.geometry,c),this.mesh.matrixAutoUpdate=!1,this.geometryNeedsUpdate=!0,this.repaint()}var r=e.prototype;return r.repaint=function(){this.geometryNeedsUpdate&&this.updateGeometry();var e=this.iLength,t=this.jLength,i=this.sliceAccess,s=this.volume,a=this.canvasBuffer,h=this.ctxBuffer,r=h.getImageData(0,0,e,t),n=r.data,o=s.data,c=s.upperThreshold,m=s.lowerThreshold,d=s.windowLow,l=s.windowHigh,p=0;if("label"===s.dataType)for(var u=0;u<t;u++)for(var g=0;g<e;g++){var v=o[i(g,u)];v=v>=this.colorMap.length?v%this.colorMap.length+1:v;var f=this.colorMap[v];n[4*p]=f>>24&255,n[4*p+1]=f>>16&255,n[4*p+2]=f>>8&255,n[4*p+3]=255&f,p++}else for(var x=0;x<t;x++)for(var y=0;y<e;y++){var w=o[i(y,x)],M=255;M=c>=w&&m<=w?M:0,w=(w=Math.floor(255*(w-d)/(l-d)))>255?255:w<0?0:0|w,n[4*p]=w,n[4*p+1]=w,n[4*p+2]=w,n[4*p+3]=M,p++}h.putImageData(r,0,0),this.ctx.drawImage(a,0,0,e,t,0,0,this.canvas.width,this.canvas.height),this.mesh.material.map.needsUpdate=!0},r.updateGeometry=function(){var e=this.volume.extractPerpendicularPlane(this.axis,this.index);this.sliceAccess=e.sliceAccess,this.jLength=e.jLength,this.iLength=e.iLength,this.matrix=e.matrix,this.canvas.width=e.planeWidth,this.canvas.height=e.planeHeight,this.canvasBuffer.width=this.iLength,this.canvasBuffer.height=this.jLength,this.ctx=this.canvas.getContext("2d"),this.ctxBuffer=this.canvasBuffer.getContext("2d"),this.geometry&&this.geometry.dispose(),this.geometry=new h.PlaneGeometry(e.planeWidth,e.planeHeight),this.mesh&&(this.mesh.geometry=this.geometry,this.mesh.matrix.identity(),this.mesh.applyMatrix4(this.matrix)),this.geometryNeedsUpdate=!1},e}();e.VolumeSlice=r,Object.defineProperty(e,"__esModule",{value:!0})}));
