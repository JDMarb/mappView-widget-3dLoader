/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */
define(["exports","../_virtual/_rollupPluginBabelHelpers","../constants","./FileLoader","../textures/CompressedTexture","./Loader"],(function(e,t,i,r,a,s){"use strict";var m=function(e){function s(t){return e.call(this,t)||this}return t.inheritsLoose(s,e),s.prototype.load=function(e,t,s,m){var o=this,p=[],n=new a.CompressedTexture,h=new r.FileLoader(this.manager);h.setPath(this.path),h.setResponseType("arraybuffer"),h.setRequestHeader(this.requestHeader),h.setWithCredentials(o.withCredentials);var u=0;function d(r){h.load(e[r],(function(e){var a=o.parse(e,!0);p[r]={width:a.width,height:a.height,format:a.format,mipmaps:a.mipmaps},6===(u+=1)&&(1===a.mipmapCount&&(n.minFilter=i.LinearFilter),n.image=p,n.format=a.format,n.needsUpdate=!0,t&&t(n))}),s,m)}if(Array.isArray(e))for(var l=0,f=e.length;l<f;++l)d(l);else h.load(e,(function(e){var r=o.parse(e,!0);if(r.isCubemap){for(var a=r.mipmaps.length/r.mipmapCount,s=0;s<a;s++){p[s]={mipmaps:[]};for(var m=0;m<r.mipmapCount;m++)p[s].mipmaps.push(r.mipmaps[s*r.mipmapCount+m]),p[s].format=r.format,p[s].width=r.width,p[s].height=r.height}n.image=p}else n.image.width=r.width,n.image.height=r.height,n.mipmaps=r.mipmaps;1===r.mipmapCount&&(n.minFilter=i.LinearFilter),n.format=r.format,n.needsUpdate=!0,t&&t(n)}),s,m);return n},s}(s.Loader);e.CompressedTextureLoader=m,Object.defineProperty(e,"__esModule",{value:!0})}));
