/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */
define(["exports","../_virtual/_rollupPluginBabelHelpers","../math/Vector3","../core/Object3D"],(function(e,t,i,r){"use strict";var o=new i.Vector3,s=new i.Vector3,n=function(e){function i(){var i;return(i=e.call(this)||this)._currentLevel=0,i.type="LOD",Object.defineProperties(t.assertThisInitialized(i),{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),i.autoUpdate=!0,i}t.inheritsLoose(i,e);var r=i.prototype;return r.copy=function(t){e.prototype.copy.call(this,t,!1);for(var i=t.levels,r=0,o=i.length;r<o;r++){var s=i[r];this.addLevel(s.object.clone(),s.distance)}return this.autoUpdate=t.autoUpdate,this},r.addLevel=function(e,t){void 0===t&&(t=0),t=Math.abs(t);var i,r=this.levels;for(i=0;i<r.length&&!(t<r[i].distance);i++);return r.splice(i,0,{distance:t,object:e}),this.add(e),this},r.getCurrentLevel=function(){return this._currentLevel},r.getObjectForDistance=function(e){var t=this.levels;if(t.length>0){var i,r;for(i=1,r=t.length;i<r&&!(e<t[i].distance);i++);return t[i-1].object}return null},r.raycast=function(e,t){if(this.levels.length>0){o.setFromMatrixPosition(this.matrixWorld);var i=e.ray.origin.distanceTo(o);this.getObjectForDistance(i).raycast(e,t)}},r.update=function(e){var t=this.levels;if(t.length>1){o.setFromMatrixPosition(e.matrixWorld),s.setFromMatrixPosition(this.matrixWorld);var i,r,n=o.distanceTo(s)/e.zoom;for(t[0].object.visible=!0,i=1,r=t.length;i<r&&n>=t[i].distance;i++)t[i-1].object.visible=!1,t[i].object.visible=!0;for(this._currentLevel=i-1;i<r;i++)t[i].object.visible=!1}},r.toJSON=function(t){var i=e.prototype.toJSON.call(this,t);!1===this.autoUpdate&&(i.object.autoUpdate=!1),i.object.levels=[];for(var r=this.levels,o=0,s=r.length;o<s;o++){var n=r[o];i.object.levels.push({object:n.object.uuid,distance:n.distance})}return i},i}(r.Object3D);e.LOD=n,Object.defineProperty(e,"__esModule",{value:!0})}));
