/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */
define(["exports","../_virtual/_rollupPluginBabelHelpers","../core/InstancedBufferAttribute","./Mesh","../math/Matrix4"],(function(t,r,n,e,i){"use strict";var a=new i.Matrix4,o=new i.Matrix4,s=[],c=new e.Mesh,l=function(t){function e(r,e,i){var a;return(a=t.call(this,r,e)||this).isInstancedMesh=!0,a.instanceMatrix=new n.InstancedBufferAttribute(new Float32Array(16*i),16),a.instanceColor=null,a.count=i,a.frustumCulled=!1,a}r.inheritsLoose(e,t);var i=e.prototype;return i.copy=function(r,n){return t.prototype.copy.call(this,r,n),this.instanceMatrix.copy(r.instanceMatrix),null!==r.instanceColor&&(this.instanceColor=r.instanceColor.clone()),this.count=r.count,this},i.getColorAt=function(t,r){r.fromArray(this.instanceColor.array,3*t)},i.getMatrixAt=function(t,r){r.fromArray(this.instanceMatrix.array,16*t)},i.raycast=function(t,r){var n=this.matrixWorld,e=this.count;if(c.geometry=this.geometry,c.material=this.material,void 0!==c.material)for(var i=0;i<e;i++){this.getMatrixAt(i,a),o.multiplyMatrices(n,a),c.matrixWorld=o,c.raycast(t,s);for(var l=0,u=s.length;l<u;l++){var h=s[l];h.instanceId=i,h.object=this,r.push(h)}s.length=0}},i.setColorAt=function(t,r){null===this.instanceColor&&(this.instanceColor=new n.InstancedBufferAttribute(new Float32Array(3*this.instanceMatrix.count),3)),r.toArray(this.instanceColor.array,3*t)},i.setMatrixAt=function(t,r){r.toArray(this.instanceMatrix.array,16*t)},i.updateMorphTargets=function(){},i.dispose=function(){this.dispatchEvent({type:"dispose"})},e}(e.Mesh);t.InstancedMesh=l,Object.defineProperty(t,"__esModule",{value:!0})}));
