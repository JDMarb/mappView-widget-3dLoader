/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */
define(["exports","../../constants","../WebGLRenderTarget","../../materials/MeshDepthMaterial","../../materials/MeshDistanceMaterial","../../materials/ShaderMaterial","../../core/BufferAttribute","../../core/BufferGeometry","../../objects/Mesh","../../math/Vector4","../../math/Vector2","../../math/Frustum","../shaders/ShaderLib/vsm.glsl"],(function(e,a,t,i,r,s,n,l,d,o,p,u,c){"use strict";e.WebGLShadowMap=function(e,h,m){var f=new u.Frustum,S=new p.Vector2,M=new p.Vector2,w=new o.Vector4,v=new i.MeshDepthMaterial({depthPacking:a.RGBADepthPacking}),g=new r.MeshDistanceMaterial,y={},x=m.maxTextureSize,b={0:a.BackSide,1:a.FrontSide,2:a.DoubleSide},P=new s.ShaderMaterial({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new p.Vector2},radius:{value:4}},vertexShader:c.vertex,fragmentShader:c.fragment}),L=P.clone();L.defines.HORIZONTAL_PASS=1;var A=new l.BufferGeometry;A.setAttribute("position",new n.BufferAttribute(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));var V=new d.Mesh(A,P),T=this;function D(a,i){var r=h.update(V);P.defines.VSM_SAMPLES!==a.blurSamples&&(P.defines.VSM_SAMPLES=a.blurSamples,L.defines.VSM_SAMPLES=a.blurSamples,P.needsUpdate=!0,L.needsUpdate=!0),null===a.mapPass&&(a.mapPass=new t.WebGLRenderTarget(S.x,S.y)),P.uniforms.shadow_pass.value=a.map.texture,P.uniforms.resolution.value=a.mapSize,P.uniforms.radius.value=a.radius,e.setRenderTarget(a.mapPass),e.clear(),e.renderBufferDirect(i,null,r,P,V,null),L.uniforms.shadow_pass.value=a.mapPass.texture,L.uniforms.resolution.value=a.mapSize,L.uniforms.radius.value=a.radius,e.setRenderTarget(a.map),e.clear(),e.renderBufferDirect(i,null,r,L,V,null)}function B(t,i,r,s,n,l){var d=null,o=!0===r.isPointLight?t.customDistanceMaterial:t.customDepthMaterial;if(d=void 0!==o?o:!0===r.isPointLight?g:v,e.localClippingEnabled&&!0===i.clipShadows&&Array.isArray(i.clippingPlanes)&&0!==i.clippingPlanes.length||i.displacementMap&&0!==i.displacementScale||i.alphaMap&&i.alphaTest>0){var p=d.uuid,u=i.uuid,c=y[p];void 0===c&&(c={},y[p]=c);var h=c[u];void 0===h&&(h=d.clone(),c[u]=h),d=h}return d.visible=i.visible,d.wireframe=i.wireframe,l===a.VSMShadowMap?d.side=null!==i.shadowSide?i.shadowSide:i.side:d.side=null!==i.shadowSide?i.shadowSide:b[i.side],d.alphaMap=i.alphaMap,d.alphaTest=i.alphaTest,d.clipShadows=i.clipShadows,d.clippingPlanes=i.clippingPlanes,d.clipIntersection=i.clipIntersection,d.displacementMap=i.displacementMap,d.displacementScale=i.displacementScale,d.displacementBias=i.displacementBias,d.wireframeLinewidth=i.wireframeLinewidth,d.linewidth=i.linewidth,!0===r.isPointLight&&!0===d.isMeshDistanceMaterial&&(d.referencePosition.setFromMatrixPosition(r.matrixWorld),d.nearDistance=s,d.farDistance=n),d}function F(t,i,r,s,n){if(!1!==t.visible){if(t.layers.test(i.layers)&&(t.isMesh||t.isLine||t.isPoints)&&(t.castShadow||t.receiveShadow&&n===a.VSMShadowMap)&&(!t.frustumCulled||f.intersectsObject(t))){t.modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,t.matrixWorld);var l=h.update(t),d=t.material;if(Array.isArray(d))for(var o=l.groups,p=0,u=o.length;p<u;p++){var c=o[p],m=d[c.materialIndex];if(m&&m.visible){var S=B(t,m,s,r.near,r.far,n);e.renderBufferDirect(r,null,l,S,t,c)}}else if(d.visible){var M=B(t,d,s,r.near,r.far,n);e.renderBufferDirect(r,null,l,M,t,null)}}for(var w=t.children,v=0,g=w.length;v<g;v++)F(w[v],i,r,s,n)}}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=a.PCFShadowMap,this.render=function(i,r,s){if(!1!==T.enabled&&(!1!==T.autoUpdate||!1!==T.needsUpdate)&&0!==i.length){var n=e.getRenderTarget(),l=e.getActiveCubeFace(),d=e.getActiveMipmapLevel(),o=e.state;o.setBlending(a.NoBlending),o.buffers.color.setClear(1,1,1,1),o.buffers.depth.setTest(!0),o.setScissorTest(!1);for(var p=0,u=i.length;p<u;p++){var c=i[p],h=c.shadow;if(void 0!==h){if(!1!==h.autoUpdate||!1!==h.needsUpdate){S.copy(h.mapSize);var m=h.getFrameExtents();if(S.multiply(m),M.copy(h.mapSize),(S.x>x||S.y>x)&&(S.x>x&&(M.x=Math.floor(x/m.x),S.x=M.x*m.x,h.mapSize.x=M.x),S.y>x&&(M.y=Math.floor(x/m.y),S.y=M.y*m.y,h.mapSize.y=M.y)),null===h.map){var v=this.type!==a.VSMShadowMap?{minFilter:a.NearestFilter,magFilter:a.NearestFilter}:{};h.map=new t.WebGLRenderTarget(S.x,S.y,v),h.map.texture.name=c.name+".shadowMap",h.camera.updateProjectionMatrix()}e.setRenderTarget(h.map),e.clear();for(var g=h.getViewportCount(),y=0;y<g;y++){var b=h.getViewport(y);w.set(M.x*b.x,M.y*b.y,M.x*b.z,M.y*b.w),o.viewport(w),h.updateMatrices(c,y),f=h.getFrustum(),F(r,s,h.camera,c,this.type)}!0!==h.isPointLightShadow&&this.type===a.VSMShadowMap&&D(h,s),h.needsUpdate=!1}}else console.warn("THREE.WebGLShadowMap:",c,"has no shadow.")}T.needsUpdate=!1,e.setRenderTarget(n,l,d)}}},Object.defineProperty(e,"__esModule",{value:!0})}));
