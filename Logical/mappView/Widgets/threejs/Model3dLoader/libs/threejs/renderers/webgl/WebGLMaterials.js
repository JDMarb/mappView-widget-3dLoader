/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */
define(["exports","../../constants"],(function(a,e){"use strict";a.WebGLMaterials=function(a,s){function i(i,l){i.opacity.value=l.opacity,l.color&&i.diffuse.value.copy(l.color),l.emissive&&i.emissive.value.copy(l.emissive).multiplyScalar(l.emissiveIntensity),l.map&&(i.map.value=l.map),l.alphaMap&&(i.alphaMap.value=l.alphaMap),l.bumpMap&&(i.bumpMap.value=l.bumpMap,i.bumpScale.value=l.bumpScale,l.side===e.BackSide&&(i.bumpScale.value*=-1)),l.displacementMap&&(i.displacementMap.value=l.displacementMap,i.displacementScale.value=l.displacementScale,i.displacementBias.value=l.displacementBias),l.emissiveMap&&(i.emissiveMap.value=l.emissiveMap),l.normalMap&&(i.normalMap.value=l.normalMap,i.normalScale.value.copy(l.normalScale),l.side===e.BackSide&&i.normalScale.value.negate()),l.specularMap&&(i.specularMap.value=l.specularMap),l.alphaTest>0&&(i.alphaTest.value=l.alphaTest);var p,t,n=s.get(l).envMap;if(n&&(i.envMap.value=n,i.flipEnvMap.value=n.isCubeTexture&&!1===n.isRenderTargetTexture?-1:1,i.reflectivity.value=l.reflectivity,i.ior.value=l.ior,i.refractionRatio.value=l.refractionRatio),l.lightMap){i.lightMap.value=l.lightMap;var c=!0!==a.physicallyCorrectLights?Math.PI:1;i.lightMapIntensity.value=l.lightMapIntensity*c}l.aoMap&&(i.aoMap.value=l.aoMap,i.aoMapIntensity.value=l.aoMapIntensity),l.map?p=l.map:l.specularMap?p=l.specularMap:l.displacementMap?p=l.displacementMap:l.normalMap?p=l.normalMap:l.bumpMap?p=l.bumpMap:l.roughnessMap?p=l.roughnessMap:l.metalnessMap?p=l.metalnessMap:l.alphaMap?p=l.alphaMap:l.emissiveMap?p=l.emissiveMap:l.clearcoatMap?p=l.clearcoatMap:l.clearcoatNormalMap?p=l.clearcoatNormalMap:l.clearcoatRoughnessMap?p=l.clearcoatRoughnessMap:l.iridescenceMap?p=l.iridescenceMap:l.iridescenceThicknessMap?p=l.iridescenceThicknessMap:l.specularIntensityMap?p=l.specularIntensityMap:l.specularColorMap?p=l.specularColorMap:l.transmissionMap?p=l.transmissionMap:l.thicknessMap?p=l.thicknessMap:l.sheenColorMap?p=l.sheenColorMap:l.sheenRoughnessMap&&(p=l.sheenRoughnessMap),void 0!==p&&(p.isWebGLRenderTarget&&(p=p.texture),!0===p.matrixAutoUpdate&&p.updateMatrix(),i.uvTransform.value.copy(p.matrix)),l.aoMap?t=l.aoMap:l.lightMap&&(t=l.lightMap),void 0!==t&&(t.isWebGLRenderTarget&&(t=t.texture),!0===t.matrixAutoUpdate&&t.updateMatrix(),i.uv2Transform.value.copy(t.matrix))}return{refreshFogUniforms:function(a,e){a.fogColor.value.copy(e.color),e.isFog?(a.fogNear.value=e.near,a.fogFar.value=e.far):e.isFogExp2&&(a.fogDensity.value=e.density)},refreshMaterialUniforms:function(a,l,p,t,n){l.isMeshBasicMaterial||l.isMeshLambertMaterial?i(a,l):l.isMeshToonMaterial?(i(a,l),function(a,e){e.gradientMap&&(a.gradientMap.value=e.gradientMap)}(a,l)):l.isMeshPhongMaterial?(i(a,l),function(a,e){a.specular.value.copy(e.specular),a.shininess.value=Math.max(e.shininess,1e-4)}(a,l)):l.isMeshStandardMaterial?(i(a,l),function(a,e){a.roughness.value=e.roughness,a.metalness.value=e.metalness,e.roughnessMap&&(a.roughnessMap.value=e.roughnessMap);e.metalnessMap&&(a.metalnessMap.value=e.metalnessMap);s.get(e).envMap&&(a.envMapIntensity.value=e.envMapIntensity)}(a,l),l.isMeshPhysicalMaterial&&function(a,s,i){a.ior.value=s.ior,s.sheen>0&&(a.sheenColor.value.copy(s.sheenColor).multiplyScalar(s.sheen),a.sheenRoughness.value=s.sheenRoughness,s.sheenColorMap&&(a.sheenColorMap.value=s.sheenColorMap),s.sheenRoughnessMap&&(a.sheenRoughnessMap.value=s.sheenRoughnessMap));s.clearcoat>0&&(a.clearcoat.value=s.clearcoat,a.clearcoatRoughness.value=s.clearcoatRoughness,s.clearcoatMap&&(a.clearcoatMap.value=s.clearcoatMap),s.clearcoatRoughnessMap&&(a.clearcoatRoughnessMap.value=s.clearcoatRoughnessMap),s.clearcoatNormalMap&&(a.clearcoatNormalScale.value.copy(s.clearcoatNormalScale),a.clearcoatNormalMap.value=s.clearcoatNormalMap,s.side===e.BackSide&&a.clearcoatNormalScale.value.negate()));s.iridescence>0&&(a.iridescence.value=s.iridescence,a.iridescenceIOR.value=s.iridescenceIOR,a.iridescenceThicknessMinimum.value=s.iridescenceThicknessRange[0],a.iridescenceThicknessMaximum.value=s.iridescenceThicknessRange[1],s.iridescenceMap&&(a.iridescenceMap.value=s.iridescenceMap),s.iridescenceThicknessMap&&(a.iridescenceThicknessMap.value=s.iridescenceThicknessMap));s.transmission>0&&(a.transmission.value=s.transmission,a.transmissionSamplerMap.value=i.texture,a.transmissionSamplerSize.value.set(i.width,i.height),s.transmissionMap&&(a.transmissionMap.value=s.transmissionMap),a.thickness.value=s.thickness,s.thicknessMap&&(a.thicknessMap.value=s.thicknessMap),a.attenuationDistance.value=s.attenuationDistance,a.attenuationColor.value.copy(s.attenuationColor));a.specularIntensity.value=s.specularIntensity,a.specularColor.value.copy(s.specularColor),s.specularIntensityMap&&(a.specularIntensityMap.value=s.specularIntensityMap);s.specularColorMap&&(a.specularColorMap.value=s.specularColorMap)}(a,l,n)):l.isMeshMatcapMaterial?(i(a,l),function(a,e){e.matcap&&(a.matcap.value=e.matcap)}(a,l)):l.isMeshDepthMaterial?i(a,l):l.isMeshDistanceMaterial?(i(a,l),function(a,e){a.referencePosition.value.copy(e.referencePosition),a.nearDistance.value=e.nearDistance,a.farDistance.value=e.farDistance}(a,l)):l.isMeshNormalMaterial?i(a,l):l.isLineBasicMaterial?(function(a,e){a.diffuse.value.copy(e.color),a.opacity.value=e.opacity}(a,l),l.isLineDashedMaterial&&function(a,e){a.dashSize.value=e.dashSize,a.totalSize.value=e.dashSize+e.gapSize,a.scale.value=e.scale}(a,l)):l.isPointsMaterial?function(a,e,s,i){a.diffuse.value.copy(e.color),a.opacity.value=e.opacity,a.size.value=e.size*s,a.scale.value=.5*i,e.map&&(a.map.value=e.map);e.alphaMap&&(a.alphaMap.value=e.alphaMap);e.alphaTest>0&&(a.alphaTest.value=e.alphaTest);var l;e.map?l=e.map:e.alphaMap&&(l=e.alphaMap);void 0!==l&&(!0===l.matrixAutoUpdate&&l.updateMatrix(),a.uvTransform.value.copy(l.matrix))}(a,l,p,t):l.isSpriteMaterial?function(a,e){a.diffuse.value.copy(e.color),a.opacity.value=e.opacity,a.rotation.value=e.rotation,e.map&&(a.map.value=e.map);e.alphaMap&&(a.alphaMap.value=e.alphaMap);e.alphaTest>0&&(a.alphaTest.value=e.alphaTest);var s;e.map?s=e.map:e.alphaMap&&(s=e.alphaMap);void 0!==s&&(!0===s.matrixAutoUpdate&&s.updateMatrix(),a.uvTransform.value.copy(s.matrix))}(a,l):l.isShadowMaterial?(a.color.value.copy(l.color),a.opacity.value=l.opacity):l.isShaderMaterial&&(l.uniformsNeedUpdate=!1)}}},Object.defineProperty(a,"__esModule",{value:!0})}));
