/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */
define(["exports","./Vector3","./MathUtils"],(function(t,n,e){"use strict";var r=new n.Vector3,s=new n.Vector3,i=function(){function t(t,e){void 0===t&&(t=new n.Vector3),void 0===e&&(e=new n.Vector3),this.start=t,this.end=e}var i=t.prototype;return i.set=function(t,n){return this.start.copy(t),this.end.copy(n),this},i.copy=function(t){return this.start.copy(t.start),this.end.copy(t.end),this},i.getCenter=function(t){return t.addVectors(this.start,this.end).multiplyScalar(.5)},i.delta=function(t){return t.subVectors(this.end,this.start)},i.distanceSq=function(){return this.start.distanceToSquared(this.end)},i.distance=function(){return this.start.distanceTo(this.end)},i.at=function(t,n){return this.delta(n).multiplyScalar(t).add(this.start)},i.closestPointToPointParameter=function(t,n){r.subVectors(t,this.start),s.subVectors(this.end,this.start);var i=s.dot(s),o=s.dot(r)/i;return n&&(o=e.clamp(o,0,1)),o},i.closestPointToPoint=function(t,n,e){var r=this.closestPointToPointParameter(t,n);return this.delta(e).multiplyScalar(r).add(this.start)},i.applyMatrix4=function(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this},i.equals=function(t){return t.start.equals(this.start)&&t.end.equals(this.end)},i.clone=function(){return(new this.constructor).copy(this)},t}();t.Line3=i,Object.defineProperty(t,"__esModule",{value:!0})}));
