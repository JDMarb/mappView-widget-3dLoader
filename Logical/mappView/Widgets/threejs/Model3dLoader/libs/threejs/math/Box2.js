/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */
define(["exports","./Vector2"],(function(t,i){"use strict";var n=new i.Vector2,s=function(){function t(t,n){void 0===t&&(t=new i.Vector2(1/0,1/0)),void 0===n&&(n=new i.Vector2(-1/0,-1/0)),this.isBox2=!0,this.min=t,this.max=n}var s=t.prototype;return s.set=function(t,i){return this.min.copy(t),this.max.copy(i),this},s.setFromPoints=function(t){this.makeEmpty();for(var i=0,n=t.length;i<n;i++)this.expandByPoint(t[i]);return this},s.setFromCenterAndSize=function(t,i){var s=n.copy(i).multiplyScalar(.5);return this.min.copy(t).sub(s),this.max.copy(t).add(s),this},s.clone=function(){return(new this.constructor).copy(this)},s.copy=function(t){return this.min.copy(t.min),this.max.copy(t.max),this},s.makeEmpty=function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},s.isEmpty=function(){return this.max.x<this.min.x||this.max.y<this.min.y},s.getCenter=function(t){return this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)},s.getSize=function(t){return this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)},s.expandByPoint=function(t){return this.min.min(t),this.max.max(t),this},s.expandByVector=function(t){return this.min.sub(t),this.max.add(t),this},s.expandByScalar=function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},s.containsPoint=function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)},s.containsBox=function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y},s.getParameter=function(t,i){return i.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))},s.intersectsBox=function(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)},s.clampPoint=function(t,i){return i.copy(t).clamp(this.min,this.max)},s.distanceToPoint=function(t){return n.copy(t).clamp(this.min,this.max).sub(t).length()},s.intersect=function(t){return this.min.max(t.min),this.max.min(t.max),this},s.union=function(t){return this.min.min(t.min),this.max.max(t.max),this},s.translate=function(t){return this.min.add(t),this.max.add(t),this},s.equals=function(t){return t.min.equals(this.min)&&t.max.equals(this.max)},t}();t.Box2=s,Object.defineProperty(t,"__esModule",{value:!0})}));
