/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */
define(["exports","../../_virtual/_rollupPluginBabelHelpers","./Curve","../curves/Curves","../curves/LineCurve"],(function(t,e,s,r,u){"use strict";var n=function(t){function s(){var e;return(e=t.call(this)||this).type="CurvePath",e.curves=[],e.autoClose=!1,e}e.inheritsLoose(s,t);var n=s.prototype;return n.add=function(t){this.curves.push(t)},n.closePath=function(){var t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new u.LineCurve(e,t))},n.getPoint=function(t,e){for(var s=t*this.getLength(),r=this.getCurveLengths(),u=0;u<r.length;){if(r[u]>=s){var n=r[u]-s,h=this.curves[u],i=h.getLength(),o=0===i?0:1-n/i;return h.getPointAt(o,e)}u++}return null},n.getLength=function(){var t=this.getCurveLengths();return t[t.length-1]},n.updateArcLengths=function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},n.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;for(var t=[],e=0,s=0,r=this.curves.length;s<r;s++)e+=this.curves[s].getLength(),t.push(e);return this.cacheLengths=t,t},n.getSpacedPoints=function(t){void 0===t&&(t=40);for(var e=[],s=0;s<=t;s++)e.push(this.getPoint(s/t));return this.autoClose&&e.push(e[0]),e},n.getPoints=function(t){void 0===t&&(t=12);for(var e,s=[],r=0,u=this.curves;r<u.length;r++)for(var n=u[r],h=n.isEllipseCurve?2*t:n.isLineCurve||n.isLineCurve3?1:n.isSplineCurve?t*n.points.length:t,i=n.getPoints(h),o=0;o<i.length;o++){var v=i[o];e&&e.equals(v)||(s.push(v),e=v)}return this.autoClose&&s.length>1&&!s[s.length-1].equals(s[0])&&s.push(s[0]),s},n.copy=function(e){t.prototype.copy.call(this,e),this.curves=[];for(var s=0,r=e.curves.length;s<r;s++){var u=e.curves[s];this.curves.push(u.clone())}return this.autoClose=e.autoClose,this},n.toJSON=function(){var e=t.prototype.toJSON.call(this);e.autoClose=this.autoClose,e.curves=[];for(var s=0,r=this.curves.length;s<r;s++){var u=this.curves[s];e.curves.push(u.toJSON())}return e},n.fromJSON=function(e){t.prototype.fromJSON.call(this,e),this.autoClose=e.autoClose,this.curves=[];for(var s=0,u=e.curves.length;s<u;s++){var n=e.curves[s];this.curves.push((new r[n.type]).fromJSON(n))}return this},s}(s.Curve);t.CurvePath=n,Object.defineProperty(t,"__esModule",{value:!0})}));
