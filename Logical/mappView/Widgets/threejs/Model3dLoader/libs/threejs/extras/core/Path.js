/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */
define(["exports","../../_virtual/_rollupPluginBabelHelpers","../../math/Vector2","./CurvePath","../curves/EllipseCurve","../curves/SplineCurve","../curves/CubicBezierCurve","../curves/QuadraticBezierCurve","../curves/LineCurve"],(function(t,r,e,n,i,u,o,s,c){"use strict";var h=function(t){function n(r){var n;return(n=t.call(this)||this).type="Path",n.currentPoint=new e.Vector2,r&&n.setFromPoints(r),n}r.inheritsLoose(n,t);var h=n.prototype;return h.setFromPoints=function(t){this.moveTo(t[0].x,t[0].y);for(var r=1,e=t.length;r<e;r++)this.lineTo(t[r].x,t[r].y);return this},h.moveTo=function(t,r){return this.currentPoint.set(t,r),this},h.lineTo=function(t,r){var n=new c.LineCurve(this.currentPoint.clone(),new e.Vector2(t,r));return this.curves.push(n),this.currentPoint.set(t,r),this},h.quadraticCurveTo=function(t,r,n,i){var u=new s.QuadraticBezierCurve(this.currentPoint.clone(),new e.Vector2(t,r),new e.Vector2(n,i));return this.curves.push(u),this.currentPoint.set(n,i),this},h.bezierCurveTo=function(t,r,n,i,u,s){var c=new o.CubicBezierCurve(this.currentPoint.clone(),new e.Vector2(t,r),new e.Vector2(n,i),new e.Vector2(u,s));return this.curves.push(c),this.currentPoint.set(u,s),this},h.splineThru=function(t){var r=[this.currentPoint.clone()].concat(t),e=new u.SplineCurve(r);return this.curves.push(e),this.currentPoint.copy(t[t.length-1]),this},h.arc=function(t,r,e,n,i,u){var o=this.currentPoint.x,s=this.currentPoint.y;return this.absarc(t+o,r+s,e,n,i,u),this},h.absarc=function(t,r,e,n,i,u){return this.absellipse(t,r,e,e,n,i,u),this},h.ellipse=function(t,r,e,n,i,u,o,s){var c=this.currentPoint.x,h=this.currentPoint.y;return this.absellipse(t+c,r+h,e,n,i,u,o,s),this},h.absellipse=function(t,r,e,n,u,o,s,c){var h=new i.EllipseCurve(t,r,e,n,u,o,s,c);if(this.curves.length>0){var a=h.getPoint(0);a.equals(this.currentPoint)||this.lineTo(a.x,a.y)}this.curves.push(h);var v=h.getPoint(1);return this.currentPoint.copy(v),this},h.copy=function(r){return t.prototype.copy.call(this,r),this.currentPoint.copy(r.currentPoint),this},h.toJSON=function(){var r=t.prototype.toJSON.call(this);return r.currentPoint=this.currentPoint.toArray(),r},h.fromJSON=function(r){return t.prototype.fromJSON.call(this,r),this.currentPoint.fromArray(r.currentPoint),this},n}(n.CurvePath);t.Path=h,Object.defineProperty(t,"__esModule",{value:!0})}));
